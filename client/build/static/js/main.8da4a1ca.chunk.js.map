{"version":3,"sources":["components/StatusChip.tsx","api/index.ts","pages/Dashboard.tsx","components/ScrollToTop.tsx","components/SessionPictures.tsx","pages/Session.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Status","createClient","body","a","axios","post","res","data","client_id","getClient","id","get","startSession","clientId","timings","message","error","getSession","killSession","delete","restartSession","getStatus","status","Dashboard","history","useHistory","useState","setError","Form","useForm","form","handleSubmit","values","phone","length","name","email","parseInt","replace","address","passcode","push","response","Title","className","level","onFinish","labelCol","span","wrapperCol","Paragraph","style","textAlign","label","type","rules","required","maxLength","minLength","justify","danger","onClick","resetFields","htmlType","ScrollToTop","position","right","bottom","window","scrollTo","console","log","SessionPictures","urls","setUrls","activeUrl","setActiveUrl","JSON","parse","localStorage","getItem","focusPhotos","setFocusPhotos","useEffect","photos","interval","setInterval","clearInterval","closeModal","sort","b","split","localeCompare","u","filteredPhotos","filter","num","includes","gridStyle","width","height","imageStyle","visible","onOk","footer","onCancel","src","alt","align","display","margin","Text","mode","allowClear","placeholder","defaultValue","value","onChange","v","setItem","stringify","map","val","Option","background","Math","floor","marginTop","Grid","hoverable","title","colors","StatusChip","poll","setStatus","color","Session","props","match","params","client","setClient","active","setActive","lightTime","setLightTime","handleTimingUpdate","n","toString","handleStartSession","loading","light_time","handleRestartSession","handleExit","handleNuke","success","has_photos","disabled","onConfirm","e","target","min","max","step","process","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8da4a1ca.chunk.js","sourcesContent":["import { Tag } from 'antd'\nimport { PresetColorType } from 'antd/lib/_util/colors'\nimport { useEffect, useState } from 'react'\nimport { getStatus } from '../api'\n\nexport enum Status {\n  'Standing By...',\n  'Warming Up...',\n  'Capturing Photo',\n  'Capturing Grid',\n  'Writing To Disk',\n  'Downloading!',\n}\n\nconst colors: Partial<PresetColorType>[] = [\n  'lime',\n  'gold',\n  'volcano',\n  'magenta',\n  'geekblue',\n]\n\ntype Props = {\n  poll: boolean\n}\n\nexport const StatusChip = ({ poll }: Props) => {\n  const [status, setStatus] = useState<Status>(Status['Standing By...'])\n\n  useEffect(() => {\n    const get = async () => {\n      if (!poll) return\n      const status = await getStatus()\n      setStatus(status)\n    }\n\n    const interval = setInterval(get, 1000 / 4)\n\n    return () => clearInterval(interval)\n  }, [poll])\n\n  return (\n    <Tag color={colors[status]} style={{ display: 'flex' }}>\n      <span style={{ margin: 'auto' }}>{Status[status]}</span>\n    </Tag>\n  )\n}\n","import { Client, Timings } from '../types'\nimport axios from 'axios'\nimport { message } from 'antd'\nimport { Status } from '../components/StatusChip'\n\nconst dev = process.env.NODE_ENV === 'development'\n\nif (dev) {\n  const host = 'http://192.168.1.114'\n  axios.defaults.baseURL = host\n}\n\nconst mock = false\n\nexport const createClient = async (body: Omit<Client, 'has_photos'>) => {\n  if (mock) return 'test'\n  const res = await axios.post<{ client_id: string }>(`/api/clients`, body)\n  return res.data.client_id\n}\n\nexport const getClient = async (id: string): Promise<Client> => {\n  if (mock)\n    return {\n      name: 'Test Client',\n      has_photos: false,\n      email: 'test@test.test',\n      phone: 1234567890,\n      address: '20 test',\n      passcode: '123456',\n    }\n  const res = await axios.get<Client>(`/api/clients/${id}`)\n  return res.data\n}  \nexport const startSession = async (clientId: string, timings: Timings) => {\n  try {\n    const res = await axios.post(`/api/clients/${clientId}/session`, timings)\n    return res.data\n  } catch (err) {\n    message.error('Something went wrong, check connection with the machine')\n    return err\n  }\n}\n\nexport const getSession = async (clientId: string) => {\n  const res = await axios.get<{ photos: string[] }>(\n    `/api/clients/${clientId}/session`,\n  )\n  return res.data // session data\n}\n\nexport const killSession = async (clientId: string) => {\n  await axios.delete(`/api/clients/${clientId}/session`)\n}\n\nexport const restartSession = async (clientId: string, timings: Timings) => {\n  await killSession(clientId)\n  await startSession(clientId, timings)\n}\n\n// TOOD: Get status\n\nexport const getStatus = async (): Promise<Status> => {\n  const res = await axios.get<{ status: Status }>('/api/status')\n  return res.data.status\n}\n\n// Someday\n\nexport const getClients = async (): Promise<Client[]> => {\n  const res = await axios.get<Client[]>(`/api/clients`)\n  return res.data\n}\n\nexport const cleanup = () => {\n  // send\n}\n","import React from 'react'\nimport { Button, Divider, Form, Input, message, Row, Typography } from 'antd'\nimport FormItem from 'antd/lib/form/FormItem'\nimport { Content } from 'antd/lib/layout/layout'\nimport { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { createClient } from '../api'\n\ntype FormData = {\n  name: string\n  email: string\n  phone: string\n  address: string //added address\n  passcode: string\n}\n\nexport const Dashboard = () => {\n  const history = useHistory()\n  const [error, setError] = useState<string | null>(null)\n  const [form] = Form.useForm<FormData>()\n\n  const handleReset = () => {\n    form.resetFields()\n  }\n\n  const handleSubmit = async (values: FormData) => {\n    if (values.phone.length < 10) {\n      // helpful message\n      message.error('Check all fields!')\n      setError('Phone number needs to be a length of at least 10')\n      return\n    }\n\n    try{\n    const client_id = await createClient({\n      name: values.name,\n      email: values.email,\n      phone: parseInt(values.phone.replace(/\\D/g, '')),\n      address: values.address,\n      passcode: values.passcode,\n    })\n\n    history.push(`/sessions/${client_id}`)\n  } catch (error: any) {\n    if(error.response && error.response.status === 401) {\n      setError('the passcode you have provided has expired or is incorrect, to get a new passcode please contact @(stuff)')\n    } else {\n      setError(error.message);\n    }\n  }\n  }\n  \n  return (\n    <Content>\n      <Typography.Title className=\"page-head\" level={3}>\n        Dashboard\n      </Typography.Title>\n      <Divider />\n      <Form\n        form={form}\n        className=\"dashboard-form\"\n        onFinish={handleSubmit}\n        labelCol={{ span: 8 }}\n        wrapperCol={{ span: 16 }}\n      >\n        <Typography.Paragraph style={{ textAlign: 'center' }}>\n        Please enter your information and the passcode that was sent to your email.<br></br> <i>If you did not received a passcode please contact us @(contact info)</i>.\n        </Typography.Paragraph>\n        <FormItem label=\"Email\" name=\"email\">\n          <Input type=\"email\" />\n        </FormItem>\n\n        <FormItem label=\"Passcode\" name=\"passcode\" rules={[{required: true, message: 'Please input your passcode'}]}>\n          <Input maxLength={6}/>\n        </FormItem>\n        <FormItem label=\"Name\" name=\"name\">\n          <Input minLength={3} />\n        </FormItem>\n        \n        <FormItem label=\"Phone\" name=\"phone\">\n          <Input type=\"tel\" minLength={10} />\n        </FormItem>\n        <FormItem label=\"Address\" name=\"address\">\n          <Input type=\"address\" />\n        </FormItem>\n        <Row justify=\"space-between\">\n          <Button danger onClick={handleReset}>\n            Reset\n          </Button>\n          <Button htmlType=\"submit\" type=\"primary\">\n            Start Session\n          </Button>\n        </Row>\n        {error && <p className=\"error\">{error}</p>}\n      </Form>\n    </Content>\n  )\n}\n","import { Button } from 'antd'\nimport React from 'react'\n\nexport const ScrollToTop = () => {\n  const handleClick = () => {\n    window.scrollTo(0, 0)\n    console.log('')\n  }\n\n  return (\n    <Button\n      type=\"link\"\n      style={{\n        position: 'fixed',\n        right: 20,\n        bottom: 20,\n      }}\n      onClick={handleClick}\n    >\n      ⤴️ Scroll To Top\n    </Button>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Card, Modal, Row, Col, Select, Typography } from 'antd'\nimport { getSession } from '../api'\nimport { ScrollToTop } from './ScrollToTop'\n\ntype Props = {\n  clientId: string\n}\n\nexport const SessionPictures = ({ clientId }: Props) => {\n  const [urls, setUrls] = useState<string[] | null>(null)\n  const [activeUrl, setActiveUrl] = useState<string | null>(null)\n  const [focusPhotos, setFocusPhotos] = useState<string[]>(\n    JSON.parse(window.localStorage.getItem('focusPhotos') || '[]'),\n  )\n\n  useEffect(() => {\n    const get = async () => {\n      if (urls && urls.length >= 89 * 1) {\n        return\n      }\n\n      const { photos } = await getSession(clientId)\n      if (photos.length) setUrls(photos)\n    }\n\n    const interval = setInterval(get, 250)\n\n    return () => clearInterval(interval)\n  }, [clientId, urls])\n\n  const closeModal = () => setActiveUrl(null)\n\n  const host =\n    process.env.NODE_ENV === 'development' ? 'http://192.168.1.107:5000' : ''\n\n  if (!urls?.length) return null\n\n  const photos = urls.sort((a, b) =>\n    a.split('_')[0].localeCompare(b.split('_')[0]),\n  )\n\n  const u = urls.length / 89\n\n  const handleSelect = (v: string[]) => {\n    console.log('SEelcted', v)\n    window.localStorage.setItem('focusPhotos', JSON.stringify(v))\n    setFocusPhotos(v)\n  }\n\n  const filteredPhotos = photos.filter((name) => {\n    const num = name.split('_')[0]\n    return focusPhotos.includes(num)\n  })\n\n  const gridStyle: React.CSSProperties = {\n    width: '100/3%',\n    height: 'auto',\n    \n  };\n\n  const imageStyle: React.CSSProperties = {\n    width: '100%',\n    height: 'auto',\n  }\n\n  return (\n    <>\n      <Modal\n        visible={!!activeUrl}\n        onOk={closeModal}\n        footer={null}\n        onCancel={closeModal}\n        width=\"50%\"\n      >\n        <img\n          width=\"100%\"\n          onClick={closeModal}\n          src={`${host}/output/${clientId}/${activeUrl}`}\n          alt=\"large modal\"\n        ></img>\n      </Modal>\n      <Row\n        align=\"middle\"\n        justify=\"space-around\"\n        style={{ display: 'flex', width: '100%' }}\n      >\n        <Typography.Title style={{ margin: '0.5rem 1rem 0.7rem' }} level={3}>\n          Session Pictures\n        </Typography.Title>\n        <Typography.Text>{urls.length}/ 89 loaded</Typography.Text>\n        <Typography.Text>Select Featured Photos:</Typography.Text>\n\n        <Select\n          mode=\"multiple\"\n          allowClear\n          placeholder=\"Please select featured\"\n          style={{ width: '35%' }}\n          defaultValue={focusPhotos}\n          value={focusPhotos}\n          onChange={handleSelect}\n        >\n          {photos.map((name) => {\n            const val = name.split('_')[0]\n            return <Select.Option value={val}>{val}</Select.Option>\n          })}\n        </Select>\n      </Row>\n\n      <div className=\"loading-bar-container\">\n        <div\n          className=\"loading-bar\"\n          style={{\n            width: `${u * 100}%`,\n            background: `hsl(${Math.floor(u * 120)}, 90%, 70%)`,\n          }}\n        ></div>\n      </div>\n      <div className=\"featured-photos\" style={{ marginTop: '2rem' }}>\n        {filteredPhotos.map((src) => (\n          //display featured photos\n            <Card.Grid hoverable={false} style={gridStyle}>\n            <img\n              style={imageStyle}\n              onClick={() => setActiveUrl(src)}\n              src={`${host}/output/${clientId}/${src}`}\n              alt=\"photo\"\n            />\n            </Card.Grid>\n        ))}\n      </div>\n      <div className=\"photo-wall\">\n        \n        {photos.map((src) => (\n          //display all photos\n          <Card key={src} className=\"photo\" title={src.split('_')[0]}>\n            <img\n              onClick={() => setActiveUrl(src)}\n              src={`${host}/output/${clientId}/${src}`}\n              alt=\"photo\"\n            />\n          </Card>\n        ))}\n      </div>\n      <ScrollToTop />\n    </>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { RouteComponentProps, useHistory } from 'react-router-dom'\nimport { getClient, killSession, restartSession, startSession } from '../api'\nimport { SessionPictures } from '../components/SessionPictures'\nimport { StatusChip } from '../components/StatusChip'\n\nimport {\n  Button,\n  Input,\n  InputNumber,\n  message,\n  Popconfirm,\n  Row,\n  Typography,\n} from 'antd'\nimport { Content } from 'antd/lib/layout/layout'\nimport { Client } from '../types'\n\ntype Props = RouteComponentProps<{ clientId: string }>\n\nexport const Session = (props: Props) => {\n  const history = useHistory()\n  const { clientId } = props.match.params\n  const [client, setClient] = useState<Client | null>(null)\n  const [active, setActive] = useState(false)\n  const [lightTime, setLightTime] = useState(\n    parseInt(window.localStorage.getItem('lightTime') || '5000'),\n  )\n\n  const handleTimingUpdate = (n: number) => {\n    window.localStorage.setItem('lightTime', n.toString())\n    setLightTime(n)\n  }\n\n  const handleStartSession = async () => {\n    message.loading('Photo sequence starting! Stand by...')\n    await startSession(clientId, { light_time: lightTime })\n    setActive(true)\n  }\n\n  const handleRestartSession = async () => {\n    setActive(false)\n    message.loading(\n      'Deleting photos & restarting capture sequence! Stand by...',\n    )\n    await restartSession(clientId, { light_time: lightTime })\n    setActive(true)\n  }\n\n  const handleExit = async () => {\n    history.push('/')\n  }\n\n  const handleNuke = async () => {\n    await killSession(clientId)\n    message.success('Photos Deleted! Going back to dashboard')\n    history.push('/')\n  }\n\n  useEffect(() => {\n    const get = async () => {\n      const client = await getClient(clientId)\n      setClient(client)\n      if (client.has_photos) setActive(true)\n    }\n\n    get()\n  }, [clientId])\n\n  return (\n    <Content>\n      <Typography.Title className=\"page-head\" level={3}>\n        Session View\n      </Typography.Title>\n\n      <Row className=\"client-info\">\n        <Typography.Text>\n          <strong>Name:</strong> {client?.name}\n        </Typography.Text>\n        <Typography.Text>\n          <strong>Email:</strong> {client?.email}\n        </Typography.Text>\n        <Typography.Text>\n          <strong>Phone:</strong> {client?.phone}\n        </Typography.Text>\n        <Typography.Text>\n          <strong>Address:</strong> {client?.address}\n        </Typography.Text>\n      </Row>\n      <div className=\"toolbar\">\n        <Row justify=\"center\" className=\"session-toolbar\">\n          <Button key=\"finish\" onClick={handleExit}>\n            Back To Dashboard\n          </Button>\n          <Button\n            key=\"startsession\"\n            disabled={active}\n            type=\"primary\"\n            onClick={handleStartSession}\n          >\n            Capture\n          </Button>\n          <Button>Lights</Button>\n          <Popconfirm\n            disabled={!active}\n            key=\"retry\"\n            title=\"Re-capture set?\"\n            onConfirm={handleRestartSession}\n          >\n            <Button type=\"default\" disabled={!active}>\n              Retry Capture\n            </Button>\n          </Popconfirm>\n          <Popconfirm\n            key=\"nuke\"\n            disabled={!active}\n            title=\"Delete all photos and return to dashboard?\"\n            onConfirm={handleNuke}\n          >\n            <Button danger disabled={!active}>\n              Abort Session\n            </Button>\n          </Popconfirm>\n\n          <StatusChip poll={true} />\n        </Row>\n        <Row className=\"session-toolbar\">\n          <h3>Light Duration (ms)</h3>\n          <InputNumber value={lightTime} onChange={handleTimingUpdate} />\n          <Input\n            className=\"slider\"\n            type=\"range\"\n            onChange={(e) => handleTimingUpdate(parseInt(e.target.value))}\n            value={lightTime}\n            min={500}\n            max={10000}\n            step={500}\n          />\n        </Row>\n      </div>\n      <Row className=\"controls\">\n        {active && <SessionPictures clientId={clientId} />}\n      </Row>\n    </Content>\n  )\n}\n","import React from 'react'\nimport './App.css'\n\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { Dashboard } from './pages/Dashboard'\nimport { Session } from './pages/Session'\n\nconsole.log('ENV', process.env.NODE_ENV)\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/sessions/:clientId\" component={Session} />\n          <Route exact path=\"/\" component={Dashboard} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  )\n}\n\nexport default App \n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport 'antd/dist/antd.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}